package com.capgemini.microservices.currencyconversion.service;

import java.math.BigDecimal;

import org.hibernate.validator.internal.util.logging.Log_.logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.capgemini.microservices.currencyconversion.entity.CurrencyConversionBean;

@FeignClient(name="forex-service", url="localhost:8000")
public interface CurrencyExchangeServiceProxy {
	
	@Autowired
	  private CurrencyExchangeServiceProxy proxy;

	  @GetMapping("/currency-converter-feign/from/{from}/to/{to}/quantity/{quantity}")
	  public default CurrencyConversionBean convertCurrencyFeign(@PathVariable String from, @PathVariable String to,
	      @PathVariable BigDecimal quantity) {

	    CurrencyConversionBean response = proxy.retrieveExchangeValue(from, to);

	    logger.info("{}", response);

	    return new CurrencyConversionBean(response.getId(), from, to, response.getConversionMultiple(), quantity,
	        quantity.multiply(response.getConversionMultiple()), response.getPort());
	  }

	public CurrencyConversionBean retrieveExchangeValue(String from, String to);

}
